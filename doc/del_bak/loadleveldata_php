<?php
if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class LoadLevelData extends ES_Model {

    public function __construct() {
        $this->load->database();
        $this->table_name = "loadleveldatas";
        $this->load->model(array("station"));
    }
    public function paramFormat($_params){
        $_params['datetime']         = isset($_params['datetime'])        ? $_params['datetime']        : 0;
        $_params['project_id']       = isset($_params['project_id'])      ? $_params['project_id']      : 0;
        $_params['city_id']          = isset($_params['city_id'])         ? $_params['city_id']         : 0;
        $_params['building_type']    = isset($_params['building_type'])   ? $_params['building_type']   : 0;
        $_params['total_load']       = isset($_params['total_load'])      ? $_params['total_load']      : 0;
        $_params['time_type']        = isset($_params['time_type'])       ? $_params['time_type']       : 0;
        $_params['saving_rate']      = isset($_params['saving_rate'])     ? $_params['saving_rate']     : null;
        $_params['saving_func']      = isset($_params['saving_func'])     ? $_params['saving_func']     : 0;
        $_params['error']            = isset($_params['error'])           ? $_params['error']           : null;
        $_params['warning']          = isset($_params['warning'])         ? $_params['warning']         : null;
        return $_params;     
    }
     public function insert($_params){
        return parent::new_sql($this->paramFormat($_params));
    }
    
    public function insert_array($params_array){
        $_insert_array = array(); 
        foreach($params_array as $params){
           array_push($_insert_array,$this->paramFormat($params));  
        }
        $this->db->insert_batch("loadleveldatas",$_insert_array);
    }


    public function delSomeLoadleveldatas($conditions){
        $begin_datetime = h_dt_start_time_of_month($conditions['datetime']);
        $end_datetime = h_dt_stop_time_of_month($conditions['datetime']);
        $tmp = $begin_datetime;
        while (h_dt_compare($end_datetime, $tmp)) {
            $conditions['datetime'] = $tmp;
            $this->delBy($conditions);
            $tmp = h_dt_add_day($tmp, 1);
        } 
    }
    public function initLoadLevelDatas($_con,$saving_func_array){
        $begin_datetime = h_dt_start_time_of_month($_con['datetime']);
        $end_datetime = h_dt_stop_time_of_month($_con['datetime']);
        
        $loadleveldata_array = array();
        foreach (h_station_total_load_array() as $total_load=>$total_load_chn) {
            foreach ($saving_func_array as $saving_func) {
                //初始化每月的loadleveldata
                $loadleveldata = array();
                $loadleveldata['project_id'] = $_con['project_id'];
                $loadleveldata['city_id'] = $_con['city_id'];
                $loadleveldata['datetime'] = $_con['datetime'];
                $loadleveldata['building_type'] = $_con['building_type'];
                $loadleveldata['time_type'] = ESC_MONTH;
                $loadleveldata['saving_func'] = $saving_func;
                $loadleveldata['total_load'] = $total_load;
                array_push($loadleveldata_array, $loadleveldata);
                //初始化每天的loadleveldata
                $loadleveldata['time_type'] = ESC_DAY;
                $tmp = $begin_datetime;
                while (h_dt_compare($end_datetime, $tmp)) {
                    $loadleveldata['datetime'] = $tmp;
                    array_push($loadleveldata_array, $loadleveldata);
                    $tmp = h_dt_add_day($tmp, 1);
                }
            }
        }
        $this->insert_array($loadleveldata_array);
    }
    
    public function findStationLoadLevelData($station_id,$time,$time_type,$saving_func){
        $station = $this->station->find_sql($station_id);
        $loadleveldata = $this->findBy_sql(array('project_id'=>$station['project_id'],'city_id'=>$station['city_id'],
            'building_type'=>$station['building'],'time_type'=>$time_type,'datetime'=>$time,
            'saving_func'=>$saving_func,'total_load'=>$station['total_load']));
        $res = $loadleveldata?$loadleveldata[0]:$loadleveldata;
        return $res;
    }
    
    public function getSavingRate($conditions){
        $loadleveldata = $this->findOneBy_sql($conditions);
        return $loadleveldata['saving_rate'];
    }
}
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
?>
